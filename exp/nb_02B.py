
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: dev_nb/02B_camera_follow_red.ipynb

from jetbot import Camera,bgr8_to_jpeg
import matplotlib.pyplot as plt
import numpy as np
import cv2
import time
# from PIL import Image
from exp.nb_02 import convert_bgr_to_rgb

from pathlib import Path

def get_red(img):
    img[img<200]=0
    red = img[:,:,0]
    avg = red.mean()
    std = red.std()
    newimg = red>(avg+std)
    return newimg

def get_middle_red(img):
    img = get_red(img)
    line = np.arange(0,224)
    middles, row_id = [], []
    for i in range(224):
        row = img[i,:]
        redpoints = line[row]
        if len(redpoints)>10: # min threshold set here
            middles.append(redpoints.mean())
            row_id.append(i)
    if len(middles)>0:
        middles = np.array(middles)
        return middles.mean(), middles   , row_id
    else:
        return 224/2,[],[]


mid = 224./2

def normalize(x): return (x-mid)/mid

def steer_robot(steer_value, robot = None, power =1.0):
    left = np.minimum(np.maximum(steer_value+0.5,0),1)
    right = np.maximum(1-left,0)
    left, right = left*power, right*power
    if robot is not None: robot.set_motors(left, right)
    print(f"{left}, {right},{steer_value} left:right:steer_value")